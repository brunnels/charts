#
# IMPORTANT NOTE
#
# This chart inherits from our common library chart. You can check the default values/options here:
# https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common/values.yaml
#

image:
  # -- image repository
  repository: haveagitgat/tdarr
  # -- image tag
  tag: 2.00.10
  # -- image pull policy
  pullPolicy: IfNotPresent

# -- environment variables. See [image docs](https://hub.docker.com/r/haveagitgat/tdarr) for more details.
# @default -- See below
env:
  # -- Set the container timezone
  TZ: UTC
  # -- tdarr web UI listening port (same as Service port)
  webUIPort: "{{ .Values.service.main.ports.http.port }}"
  # -- tdarr server binding address
  serverIP:
    valueFrom:
      fieldRef:
        fieldPath: status.podIP
  # -- tdarr server listening port
  serverPort: "{{ .Values.service.main.ports.server.port }}"
  # -- Allow override for the pre-compiled tdarr ffmpeg binary
  ffmpegPath: ""

# -- Configures service settings for the chart.
# @default -- See values.yaml
service:
  main:
    ports:
      http:
        port: 8265
      server:
        enabled: true
        protocol: TCP
        port: 8266

ingress:
  # -- Enable and configure ingress settings for the chart under this key.
  # @default -- See values.yaml
  main:
    enabled: false

node:
  # -- Deploy a single tdarr node rather than a server.
  enabled: false
  # -- Node ID
  id: node
  image:
    # -- image repository
    repository: haveagitgat/tdarr_node
    # -- image tag
    tag: 2.00.10
    # -- image pull policy
    pullPolicy: IfNotPresent
  # -- Node resources
  resources: {}

# -- Configure persistence settings for the chart under this key.
# @default -- See below
persistence:
  # -- Volume used for configuration
  # @default -- See values.yaml
  config:
    enabled: false
    mountPath: /app/configs
    size: 500Mi

  # -- Volume used for tdarr server database
  # @default -- See values.yaml
  data:
    enabled: false
    mountPath: /app/server
    size: 4Gi

  # -- Volume used for media libraries
  # @default -- See values.yaml
  media:
    enabled: false
    mountPath: /media

  # -- Volume used for shared storage. e.g. emptydir transcode
  # @default -- See values.yaml
  shared:
    enabled: false
    type: pvc
    mountPath: /temp
    accessMode: ReadWriteMany
    size: 60Gi

# -- Defines server affinity constraint rules.
# [[ref]](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity)
affinity: {}
#  nodeAffinity:
#    preferredDuringSchedulingIgnoredDuringExecution:
#      - weight: 1
#        preference:
#          matchExpressions:
#            - key: node-role.kubernetes.io/nvidia
#              operator: NotIn
#              values:
#                - "true"
#      - weight: 1
#        preference:
#          matchExpressions:
#            - key: feature.node.kubernetes.io/pci-0300_8086.present
#              operator: NotIn
#              values:
#                - "true"

nodes:
  # -- Deploy a tdarr node StatefulSet.
  enabled: false
  # -- Set an override for the prefix of the fullname
  nameOverride: nodes
  image:
    # -- image repository
    repository: haveagitgat/tdarr_node
    # -- image tag
    tag: 2.00.10
    # -- image pull policy
    pullPolicy: IfNotPresent
  # -- Node persistence
  # Additional items can be added by adding a dictionary key similar to the 'config' key.
  # @default -- See below
  persistence:
    # -- Volume used for media libraries
    # @default -- See values.yaml
    media:
      enabled: false
      mountPath: /media

    # -- Volume used for shared storage. e.g. emptydir transcode.
    # it needs to be shared with the server so default is the server PVC
    # @default -- See values.yaml
    shared:
      enabled: false
      mountPath: /temp
      existingClaim: tdarr-shared

  # -- Set the resource requests / limits for each nodes pod.
  resources:
#    limits:
#      cpu: 100m
#      memory: 128Mi
#    requests:
#      cpu: 100m
#      memory: 128Mi
  # -- Used to create individual disks for each stateful set pod.
  volumeClaimTemplates:
    config:
      name: config
      mountPath: /app/configs
      accessMode: "ReadWriteOnce"
      size: 500Mi
  # -- Set labels on the nodes statefulset
  labels: {}
  # -- Set annotations on the nodes statefulset
  annotations: {}
  # -- Number of desired pods
  replicas: 3
  podManagementPolicy:
  # -- Set the controller upgrade strategy
  # For StatefulSets, valid values are OnDelete and RollingUpdate (default).
  strategy: RollingUpdate
  rollingUpdate:
    # -- Set statefulset RollingUpdate partition
    partition:
  # -- nodes pod environment variables. Template enabled.
  # Syntax options:
  # A) TZ: UTC
  # B) PASSWD: '{{ .Release.Name }}'
  # C) PASSWD:
  #      envFrom:
  #        ...
  # D) - name: TZ
  #      value: UTC
  # E) - name: TZ
  #      value: '{{ .Release.Name }}'
  env:
#    NVIDIA_DRIVER_CAPABILITIES: all
#    NVIDIA_VISIBLE_DEVICES: all
  # -- Defines nodes pod affinity constraint rules.
  # [[ref]](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity)
  affinity: {}
#    nodeAffinity:
#      requiredDuringSchedulingIgnoredDuringExecution:
#        nodeSelectorTerms:
#          - matchExpressions:
#              - key: node-role.kubernetes.io/nvidia
#                operator: In
#                values:
#                  - "true"
#          - matchExpressions:
#              - key: feature.node.kubernetes.io/pci-0300_8086.present
#                operator: In
#                values:
#                  - "true"
  # -- nodes pod probe configuration
  # -- [[ref]](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
  # @default -- See below
  # -- Specify any initContainers here. Yaml will be passed in to the Pod as-is.
  initContainers: []
  # -- Specify any additional containers here. Yaml will be passed in to the Pod as-is.
  additionalContainers: []
  probes:
    # -- Liveness probe configuration
    # @default -- See below
    liveness:
      # -- Enable the liveness probe
      enabled: false
      # -- Set this to `true` if you wish to specify your own livenessProbe
      custom: false
      # -- The spec field contains the values for the default livenessProbe.
      # If you selected `custom: true`, this field holds the definition of the livenessProbe.
      # @default -- See below
      spec:
        initialDelaySeconds: 0
        periodSeconds: 10
        timeoutSeconds: 1
        failureThreshold: 3
    # -- Reaainess probe configuration
    # @default -- See below
    readiness:
      # -- Enable the readiness probe
      enabled: false
      # -- Set this to `true` if you wish to specify your own readinessProbe
      custom: false
      # -- The spec field contains the values for the default readinessProbe.
      # If you selected `custom: true`, this field holds the definition of the readinessProbe.
      # @default -- See below
      spec:
        initialDelaySeconds: 0
        periodSeconds: 10
        timeoutSeconds: 1
        failureThreshold: 3
    # -- Startup probe configuration
    # @default -- See below
    startup:
      # -- Enable the startup probe
      enabled: false
      # -- Set this to `true` if you wish to specify your own startupProbe
      custom: false
      # -- The spec field contains the values for the default startupProbe.
      # If you selected `custom: true`, this field holds the definition of the startupProbe.
      # @default -- See below
      spec:
        initialDelaySeconds: 0
        timeoutSeconds: 1
        ## This means it has a maximum of 5*30=150 seconds to start up before it fails
        periodSeconds: 5
  # -- Configure the services for the nodes statefulset here.
  # Additional services can be added by adding a dictionary key similar to the 'main' service.
  # @default -- See below
  service:
    main:
      # -- Enables or disables the service
      enabled: true
      # -- Make this the primary service (used in probes, notes, etc...).
      # If there is more than 1 service, make sure that only 1 service is marked as primary.
      primary: true
      # -- Override the name suffix that is used for this service
      nameOverride:
      # -- Set the service type
      type: ClusterIP
      # -- Hardcoded clusterIP address. None is used for statefulset pod to pod service
      clusterIP: None
      # -- Provide additional annotations which may be required.
      annotations: {}
      # -- Provide additional labels which may be required.
      labels: {}
      # -- Configure the Service port information here.
      # Additional ports can be added by adding a dictionary key similar to the 'node' service.
      # @default -- See below
      ports:
        node:
          # -- Enables or disables the port
          enabled: true
          # -- Make this the primary port (used in probes, notes, etc...)
          # If there is more than 1 service, make sure that only 1 port is marked as primary.
          primary: true
          # -- The port number
          port: 8267
          # -- Port protocol.
          # Support values are `HTTP`, `HTTPS`, `TCP` and `UDP`.
          protocol: TCP
          # -- Specify a service targetPort if you wish to differ the service port from the application port.
          # If `targetPort` is specified, this port number is used in the container definition instead of
          # the `port` value. Therefore named ports are not supported for this field.
          targetPort:
          # -- Specify the nodePort value for the LoadBalancer and NodePort service types.
          # [[ref]](https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport)
          nodePort:

