{{- include "common.values.setup" . }}

{{/* Render the templates */}}
{{ include "common.all" . }}

{{- define "tdarr.statefulset" -}}
{{ if .Values.node.enabled }}
nameOverride: node
image:
  repository: {{ .Values.node.image.repository }}
  tag: {{ .Values.node.image.tag }}
  pullPolicy: {{ .Values.node.image.pullPolicy }}
podLabels:
    app.kubernetes.io/component: {{ include "common.names.fullname" . }}-node
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: node
              app.kubernetes.io/instance: {{ .Release.Name }}
              app.kubernetes.io/component: {{ include "common.names.fullname" . }}-node
          namespaces:
            - {{ .Release.Namespace }}
          topologyKey: kubernetes.io/hostname
        weight: 1
env:
  TZ: {{ default "UTC" .Values.env.TZ }}
  nodeID:
    valueFrom:
      fieldRef:
        fieldPath: metadata.name
  serverIP: tdarr.tdarr.svc.cluster.local
  serverPort: {{ .Values.service.main.ports.server.port }}
  nodeIP:
    valueFrom:
      fieldRef:
        fieldPath: status.podIP
  nodePort: 8267
  ffmpegPath: {{ default "" .Values.env.ffmpegPath }}
{{- with .Values.node.resources }}
resources:
{{- toYaml . | nindent 4 }}
{{- end }}

{{ if .Values.node.volumeClaimTemplates }}
volumeClaimTemplates: {{ .Values.node.volumeClaimTemplates | toJson | indent 4 }}
{{ end }}

{{ if .Values.node.probes }}
probes: {{ .Values.node.probes | toJson | indent 4 }}
{{ end }}

{{ if .Values.node.service }}
service: {{ .Values.node.service | toJson | indent 4 }}
{{ end }}

controller:
  annotations: {}
{{ if .Values.node.annotations }}
{{- with .Values.node.annotations }}
  annotations:
{{- toYaml . | nindent 4 }}
{{- end }}
{{ end }}

  labels: {}
{{ if .Values.node.labels }}
{{- with .Values.node.labels }}
  labels:
{{- toYaml . | nindent 4 }}
{{- end }}
{{ else }}
  labels: {}
{{ end }}

{{ if .Values.node.replicas }}
  replicas: {{ .Values.node.replicas }}
{{ end }}

{{ if .Values.node.revisionHistoryLimit }}
  revisionHistoryLimit: {{ .Values.node.revisionHistoryLimit }}
{{ end }}

{{ if .Values.node.rollingUpdate }}
  rollingUpdate:
    {{ .Values.node.rollingUpdate | toJson | indent 6 }}
{{ end }}

{{ if .Values.node.strategy }}
  strategy: {{ .Values.node.strategy }}
{{ end }}

{{ end }}
{{- end -}}
{{ if .Values.node.enabled }}

{{- $nodeValues := (include "tdarr.statefulset" . | fromYaml) -}}
{{- $_ := mergeOverwrite .Values $nodeValues -}}
{{- $_ := set .Values "service" $nodeValues.service -}}
{{- $_ := set .Values "env" $nodeValues.env -}}

{{/* Render the node PVC's */}}
{{- include "common.pvc" . | nindent 0 }}

{{/* Render the node Service */}}
{{- include "common.service" . | nindent 0 }}

{{/* Render the node StatefulSet */}}
{{- include "common.statefulset" . | nindent 0 }}

{{- end }}

